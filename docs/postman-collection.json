{
  "info": {
    "_postman_id": "projectpilot-collection",
    "name": "ProjectPilot API Collection",
    "description": "API documentation for ProjectPilot with Auth, Projects and Tasks modules",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{token}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "üîê Auth",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.tokens && response.data.tokens.accessToken) {",
                  "        pm.environment.set('token', response.data.tokens.accessToken);",
                  "        pm.environment.set('refreshToken', response.data.tokens.refreshToken);",
                  "        console.log('Token saved successfully');",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Jo√£o Silva\",\n  \"email\": \"joao@email.com\",\n  \"password\": \"MinhaSenh@123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "register"]
            },
            "description": "Register a new user account"
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.tokens && response.data.tokens.accessToken) {",
                  "        pm.environment.set('token', response.data.tokens.accessToken);",
                  "        pm.environment.set('refreshToken', response.data.tokens.refreshToken);",
                  "        console.log('Token saved successfully');",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"joao@email.com\",\n  \"password\": \"MinhaSenh@123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "login"]
            },
            "description": "Login with existing user credentials"
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "refresh"]
            },
            "description": "Refresh access token using refresh token"
          },
          "response": []
        },
        {
          "name": "Logout User",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "logout"]
            },
            "description": "Logout user and invalidate refresh token"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìÅ Projects",
      "item": [
        {
          "name": "Create Project",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.id) {",
                  "        pm.environment.set('projectId', response.data.id);",
                  "        console.log('Project ID saved: ' + response.data.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Meu Projeto Incr√≠vel\",\n  \"description\": \"Um projeto para demonstrar a API\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/projects",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "projects"]
            },
            "description": "Create a new project"
          },
          "response": []
        },
        {
          "name": "Get Project by ID",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/projects/{{projectId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "projects", "{{projectId}}"]
            },
            "description": "Get a specific project with its repositories"
          },
          "response": []
        },
        {
          "name": "Update Project",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Projeto Atualizado\",\n  \"description\": \"Descri√ß√£o atualizada do projeto\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/projects/{{projectId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "projects", "{{projectId}}"]
            },
            "description": "Update project information"
          },
          "response": []
        },
        {
          "name": "Delete Project",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/projects/{{projectId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "projects", "{{projectId}}"]
            },
            "description": "Delete a project"
          },
          "response": []
        },
        {
          "name": "GitHub Integration",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/projects/{{projectId}}/github/{{githubUsername}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "projects", "{{projectId}}", "github", "{{githubUsername}}"]
            },
            "description": "Integrate GitHub repositories to project"
          },
          "response": []
        },
        {
          "name": "Remove GitHub Integration",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/projects/{{projectId}}/github",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "projects", "{{projectId}}", "github"]
            },
            "description": "Remove all GitHub repositories from project"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìã Tasks",
      "item": [
        {
          "name": "Create Task",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.id) {",
                  "        pm.environment.set('taskId', response.data.id);",
                  "        console.log('Task ID saved: ' + response.data.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Implementar autentica√ß√£o\",\n  \"description\": \"Criar sistema completo de login e registro\",\n  \"priority\": \"HIGH\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/projects/{{projectId}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "projects", "{{projectId}}", "tasks"]
            },
            "description": "Create a new task in a project"
          },
          "response": []
        },
        {
          "name": "Update Task",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Implementar autentica√ß√£o JWT\",\n  \"description\": \"Sistema completo de autentica√ß√£o com JWT e refresh tokens\",\n  \"status\": \"IN_PROGRESS\",\n  \"priority\": \"URGENT\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "tasks", "{{taskId}}"]
            },
            "description": "Update task status, title, description or priority"
          },
          "response": []
        },
        {
          "name": "Delete Task",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "tasks", "{{taskId}}"]
            },
            "description": "Delete a task"
          },
          "response": []
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3001",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refreshToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "projectId",
      "value": "",
      "type": "string"
    },
    {
      "key": "taskId",
      "value": "",
      "type": "string"
    },
    {
      "key": "githubUsername",
      "value": "seu-username-github",
      "type": "string"
    }
  ]
}